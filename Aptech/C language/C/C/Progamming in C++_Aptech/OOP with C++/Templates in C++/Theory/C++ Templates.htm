<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->
<html style="" class=" js no-touch csstransforms3d csstransitions"><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<!-- Basic -->
<meta charset="utf-8">
<title>C++ Templates</title>
<meta name="description" content="C++ Templates - Learn C++ in simple and easy steps starting from basic to advanced concepts with examples including C++ Overview, Environment Setup, Basic Syntax, Comments, Data Types, Variable Types, Scope, Constants/Literals, Modifier Types, Storage Classes, Operators, Loop Types, Decision Making, Functions, Numbers, Arrays, Strings, Pointers, References, Date and Time, Basic Input/Output, Data Structures, Classes and Objects, Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Abstraction, Encapsulation, Interfaces, Files and Streams, STL, Iterators, Algorithms, Exception Handling, Dynamic Memory, Overloading, Templates, Namespaces and Signal Handling, Preprocessor, Multithreading, Web Programming.">
<meta name="Keywords" content="C++, Tutorial, Overview, Environment Setup, Basic Syntax, Comments, Data Types, Variable Types, Scope, Constants/Literals, Modifier Types, Storage Classes, Operators, Loop Types, Decision Making, Functions, Numbers, Arrays, Strings, Pointers, References, Date and Time, Basic Input/Output, Data Structures, Classes and Objects, Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Abstraction, Encapsulation, Interfaces, Files and Streams, STL, Iterators, Algorithms, Exception Handling, Dynamic Memory, Overloading, Templates, Namespaces and Signal Handling, Preprocessor, Multithreading, Web Programming.">
<!-- base href="https://www.tutorialspoint.com/" -->
<link rel="shortcut icon" href="https://www.tutorialspoint.com/favicon.ico" type="image/x-icon">
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="website">
<meta property="fb:app_id" content="471319149685276">
<meta property="og:site_name" content="www.tutorialspoint.com">
<meta name="robots" content="index, follow">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script src="C++%20Templates_files/pubads_impl_rendering_168.js"></script><script src="C++%20Templates_files/ads"></script><script src="C++%20Templates_files/ca-pub-7133395778201029.js"></script><script type="text/javascript" src="C++%20Templates_files/script-min-v4.js"></script>
<link rel="stylesheet" href="C++%20Templates_files/style-min.css">
<script async="async" src="C++%20Templates_files/gpt.js"></script>
<script>
  var googletag = googletag || {};
  googletag.cmd = googletag.cmd || [];
</script>

<script>
  googletag.cmd.push(function() {
    googletag.defineSlot('/60931893/tutorial_right_bottom', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-0').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_right_middle', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-1').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_right_top', [300, 250], 'div-gpt-ad-1510138782906-2').addService(googletag.pubads());
    googletag.defineSlot('/60931893/tutorial_bottom_leader_board', [[600, 400], [300, 250], [480, 320], [468, 60], [336, 280], [600, 200], [580, 400]], 'div-gpt-ad-1510138782906-3').addService(googletag.pubads());
    googletag.pubads().enableSingleRequest();
    googletag.enableServices();
  });
</script>
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
pre.prettyprint.tryit {min-height:37px; background: #eee url(/cplusplus/images/try-it.jpg) top right no-repeat !important}select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #004481 url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #004481 !important;}
.submenu-item{ border-bottom: 2px solid #004481 !important; border-top: 2px solid #004481 !important }
.ace_scroller{overflow: auto!important;}
a.demo{font-family: "Open Sans",Arial,sans-serif; background:#004481; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}
a.demo:hover{opacity:.8}
pre.prettyprint {
    border: 1px solid #d6d6d6;
    background-color: #eee;
    width: 98%;
    border-radius: 0;
    padding: 5px;
    margin: 0;
    margin-bottom: 10px; margin-top:15px;
    font-size: 13px;
    overflow: auto;
}
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
<link rel="preload" href="C++%20Templates_files/integrator_002.js" as="script"><script type="text/javascript" src="C++%20Templates_files/integrator_002.js"></script><link rel="preload" href="C++%20Templates_files/integrator.js" as="script"><script type="text/javascript" src="C++%20Templates_files/integrator.js"></script><script src="C++%20Templates_files/pubads_impl_168.js" async=""></script><link rel="prefetch" href="https://securepubads.g.doubleclick.net/static/3p_cookie.html"></head>
<body onload="prettyPrint()">
<div class="wrapLoader">
   <div class="imgLoader">
      <img src="C++%20Templates_files/loading-cg.gif" alt="" width="70" height="70">
   </div>
</div>
<header>
   <div class="container">			
      <h1 class="logo">
      <a href="https://www.tutorialspoint.com/index.htm" title="tutorialspoint">
      <img alt="tutorialspoint" src="C++%20Templates_files/logo.png">
      </a>
      </h1>			
      <nav>
         <ul class="nav nav-pills nav-top">
            <li><a href="https://www.tutorialspoint.com/about/about_careers.htm" style="background: #fffb09; font-weight: bold;"><i class="icon icon-suitcase"></i> Jobs</a></li>
            <li> <a target="_blank" href="http://www.qries.com/"><i class="fa fa-send"></i> &nbsp;Qries (Q/A)</a> </li>
            <li> <a href="https://www.tutorialspoint.com/whiteboard.htm"><img src="C++%20Templates_files/image-editor.png" alt="Whiteboard" title="Whiteboard"> &nbsp;Whiteboard</a> </li>
            <li> <a href="https://www.tutorialspoint.com/netmeeting.php"><i class="fa-camera"></i> &nbsp;Net Meeting</a> </li>
            <li> <a href="https://www.tutorialspoint.com/online_dev_tools.htm"> <i class="dev-tools-menu" style="opacity:.5"></i> Tools </a> </li>
            <li> <a href="https://www.tutorialspoint.com/articles/index.php"><i class="icon icon-file-text-o"></i> &nbsp;Articles</a> </li>            
            <li class="top-icons">
              <ul class="social-icons">
              <li class="facebook"><a href="https://www.facebook.com/tutorialspointindia" target="_blank" data-placement="bottom" title="tutorialspoint @ Facebook">Facebook</a></li>
              <li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
              <li class="twitter"><a href="https://www.twitter.com/tutorialspoint" target="_blank" data-placement="bottom" title="tutorialspoint @ Twitter">Twitter</a></li>
              <li class="linkedin"><a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" data-placement="bottom" title="tutorialspoint @ Linkedin">Linkedin</a></li>
              <li class="youtube"><a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" data-placement="bottom" title="tutorialspoint YouTube">YouTube</a></li>
              </ul>
           </li>
         </ul>
      </nav>
         <!-- search code here  --> 
      <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style="top: 24px!important"> <i class="icon icon-bars"></i> </button>
   </div>
  
   <div class="navbar nav-main">
      <div class="container">
         <nav class="nav-main mega-menu">
            <ul class="nav nav-pills nav-main" id="mainMenu">
               <li class="dropdown no-sub-menu"> <a class="dropdown" href="https://www.tutorialspoint.com/index.htm"><i class="icon icon-home"></i> Home</a> </li>   
               <li class="dropdown" id="liTL"><a class="dropdown" href="javascript:void(0);"><span class="tut-lib"> Tutorials Library <i class="fa-caret-down"></i></span></a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/codingground.htm"><i class="fa-code"></i> Coding Ground </a> </li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/tutor_connect/index.php"><i class="fa-user"> </i> Tutor Connect</a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fa-toggle-right"></i> Videos </a></li>
               <li class="dropdown no-sub-menu">
                  <div class="searchform-popup">
                     <input class="header-search-box" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off" type="text">
                     <div class="magnifying-glass"><i class="icon-search"></i> Search </div>
                 </div>
               </li>
            </ul>
         </nav>
         <div class="submenu-item sub-main-menu" id="top-sub-menu"></div>
         
      </div>
   </div>	
</header>
<div style="clear:both;"></div>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-2">
<aside class="sidebar">
<style>
.ts{
   vertical-align:middle !important;
   text-align:center !important;   
}
</style>
<div class="mini-logo">
<img src="C++%20Templates_files/cpp-mini-logo.jpg" alt="C++ Tutorial">
</div>
<ul class="nav nav-list primary left-menu">
<li class="heading">C++ Basics</li>
<li><a href="https://www.tutorialspoint.com/cplusplus/index.htm">C++ Home</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_overview.htm">C++ Overview</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_environment_setup.htm">C++ Environment Setup</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_basic_syntax.htm">C++ Basic Syntax</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_comments.htm">C++ Comments</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_data_types.htm">C++ Data Types</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_variable_types.htm">C++ Variable Types</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_variable_scope.htm">C++ Variable Scope</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_constants_literals.htm">C++ Constants/Literals</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_modifier_types.htm">C++ Modifier Types</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_storage_classes.htm">C++ Storage Classes</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_operators.htm">C++ Operators</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_loop_types.htm">C++ Loop Types</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_decision_making.htm">C++ Decision Making</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_functions.htm">C++ Functions</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_numbers.htm">C++ Numbers</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_arrays.htm">C++ Arrays</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_strings.htm">C++ Strings</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_pointers.htm">C++ Pointers</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_references.htm">C++ References</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_date_time.htm">C++ Date &amp; Time</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_basic_input_output.htm">C++ Basic Input/Output</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_data_structures.htm">C++ Data Structures</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">C++ Object Oriented</li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_classes_objects.htm">C++ Classes &amp; Objects</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_inheritance.htm">C++ Inheritance</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_overloading.htm">C++ Overloading</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_polymorphism.htm">C++ Polymorphism</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_data_abstraction.htm">C++ Abstraction</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_data_encapsulation.htm">C++ Encapsulation</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_interfaces.htm">C++ Interfaces</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">C++ Advanced</li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_files_streams.htm">C++ Files and Streams</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_exceptions_handling.htm">C++ Exception Handling</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_dynamic_memory.htm">C++ Dynamic Memory</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_namespaces.htm">C++ Namespaces</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_templates.htm" style="background-color: rgb(214, 214, 214);">C++ Templates</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_preprocessor.htm">C++ Preprocessor</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_signal_handling.htm">C++ Signal Handling</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_multithreading.htm">C++ Multithreading</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_web_programming.htm">C++ Web Programming</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">C++ Useful Resources</li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_questions_answers.htm">C++ Questions and Answers</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_quick_guide.htm">C++ Quick Guide</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_object_oriented.htm">C++ Object Oriented</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_stl_tutorial.htm">C++ STL Tutorial</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_standard_library.htm">C++ Standard Library</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_useful_resources.htm">C++ Useful Resources</a></li>
<li><a href="https://www.tutorialspoint.com/cplusplus/cpp_discussion.htm">C++ Discussion</a></li>
</ul>
<ul class="nav nav-list primary push-bottom left-menu special">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="https://www.tutorialspoint.com/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>C++ Templates</h1>
<div class="topgooglead">
<hr>
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript" src="C++%20Templates_files/show_ads.js"> 
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent;"><ins id="aswift_0_anchor" style="display:block;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent;"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;width:468px;height:60px;" width="468" height="60" frameborder="0"></iframe></ins></ins>
</div>
<hr>
<div class="pre-btn">
<a href="https://www.tutorialspoint.com/cplusplus/cpp_namespaces.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="https://www.tutorialspoint.com/cplusplus/cpp_preprocessor.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>
<hr>
<p>Templates are the foundation of generic programming, which involves 
writing code in a way that is independent of any particular type.</p>
<p>A template is a blueprint or formula for creating a generic class or a
 function. The library containers like iterators and algorithms are 
examples of generic programming and have been developed using template 
concept.</p>
<p>There is a single definition of each container, such as <b>vector</b>, but we can define many different kinds of vectors for example, <b>vector &lt;int&gt;</b> or <b>vector &lt;string&gt;</b>.</p>
<p>You can use templates to define functions as well as classes, let us see how they work −</p>
<h2>Function Template</h2>
<p>The general form of a template function definition is shown here −</p>
<pre class="result notranslate">template &lt;class type&gt; ret-type func-name(parameter list) {
   // body of function
} 
</pre>
<p>Here, type is a placeholder name for a data type used by the function. This name can be used within the function definition.</p>
<p>The following is the example of a function template that returns the maximum of two values −</p>
<pre class="prettyprint notranslate tryit prettyprinted" style=""><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;iostream&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;string&gt;</span><span class="pln">

</span><span class="kwd">using</span><span class="pln"> </span><span class="kwd">namespace</span><span class="pln"> std</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">template</span><span class="pln"> </span><span class="pun">&lt;</span><span class="kwd">typename</span><span class="pln"> T</span><span class="pun">&gt;</span><span class="pln">
</span><span class="kwd">inline</span><span class="pln"> T </span><span class="kwd">const</span><span class="pun">&amp;</span><span class="pln"> </span><span class="typ">Max</span><span class="pln"> </span><span class="pun">(</span><span class="pln">T </span><span class="kwd">const</span><span class="pun">&amp;</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> T </span><span class="kwd">const</span><span class="pun">&amp;</span><span class="pln"> b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   </span><span class="kwd">return</span><span class="pln"> a </span><span class="pun">&lt;</span><span class="pln"> b </span><span class="pun">?</span><span class="pln"> b</span><span class="pun">:</span><span class="pln">a</span><span class="pun">;</span><span class="pln"> 
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">int</span><span class="pln"> main </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">39</span><span class="pun">;</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln"> j </span><span class="pun">=</span><span class="pln"> </span><span class="lit">20</span><span class="pun">;</span><span class="pln">
   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Max(i, j): "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="typ">Max</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> j</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln"> 

   </span><span class="kwd">double</span><span class="pln"> f1 </span><span class="pun">=</span><span class="pln"> </span><span class="lit">13.5</span><span class="pun">;</span><span class="pln"> 
   </span><span class="kwd">double</span><span class="pln"> f2 </span><span class="pun">=</span><span class="pln"> </span><span class="lit">20.7</span><span class="pun">;</span><span class="pln"> 
   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Max(f1, f2): "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="typ">Max</span><span class="pun">(</span><span class="pln">f1</span><span class="pun">,</span><span class="pln"> f2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln"> 

   </span><span class="kwd">string</span><span class="pln"> s1 </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Hello"</span><span class="pun">;</span><span class="pln"> 
   </span><span class="kwd">string</span><span class="pln"> s2 </span><span class="pun">=</span><span class="pln"> </span><span class="str">"World"</span><span class="pun">;</span><span class="pln"> 
   cout </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Max(s1, s2): "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="typ">Max</span><span class="pun">(</span><span class="pln">s1</span><span class="pun">,</span><span class="pln"> s2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> endl</span><span class="pun">;</span><span class="pln"> 

   </span><span class="kwd">return</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre>
<p>If we compile and run above code, this would produce the following result −</p>
<pre class="result notranslate">Max(i, j): 39
Max(f1, f2): 20.7
Max(s1, s2): World
</pre>
<h2>Class Template</h2>
<p>Just as we can define function templates, we can also define class 
templates. The general form of a generic class declaration is shown here
 −</p>
<pre class="result notranslate">template &lt;class type&gt; class class-name {
   .
   .
   .
}
</pre>
<p>Here, <b>type</b>  is the placeholder type name, which will be 
specified when a class is instantiated. You can define more than one 
generic data type by using a comma-separated list.</p>
<p>Following is the example to define class Stack&lt;&gt; and implement 
generic methods to push and pop the elements from the stack −</p>
<pre class="prettyprint notranslate tryit prettyprinted" style=""><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;iostream&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;vector&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;cstdlib&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;string&gt;</span><span class="pln">
</span><span class="com">#include</span><span class="pln"> </span><span class="str">&lt;stdexcept&gt;</span><span class="pln">

</span><span class="kwd">using</span><span class="pln"> </span><span class="kwd">namespace</span><span class="pln"> std</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">template</span><span class="pln"> </span><span class="pun">&lt;</span><span class="kwd">class</span><span class="pln"> T</span><span class="pun">&gt;</span><span class="pln">
</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Stack</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   </span><span class="kwd">private</span><span class="pun">:</span><span class="pln"> 
      vector</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> elems</span><span class="pun">;</span><span class="pln">    </span><span class="com">// elements </span><span class="pln">

   </span><span class="kwd">public</span><span class="pun">:</span><span class="pln"> 
      </span><span class="kwd">void</span><span class="pln"> push</span><span class="pun">(</span><span class="pln">T </span><span class="kwd">const</span><span class="pun">&amp;);</span><span class="pln">  </span><span class="com">// push element </span><span class="pln">
      </span><span class="kwd">void</span><span class="pln"> pop</span><span class="pun">();</span><span class="pln">               </span><span class="com">// pop element </span><span class="pln">
      T top</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">const</span><span class="pun">;</span><span class="pln">            </span><span class="com">// return top element </span><span class="pln">
      
      </span><span class="kwd">bool</span><span class="pln"> empty</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="pun">{</span><span class="pln">      </span><span class="com">// return true if empty.</span><span class="pln">
         </span><span class="kwd">return</span><span class="pln"> elems</span><span class="pun">.</span><span class="pln">empty</span><span class="pun">();</span><span class="pln"> 
      </span><span class="pun">}</span><span class="pln"> 
</span><span class="pun">};</span><span class="pln"> 

</span><span class="kwd">template</span><span class="pln"> </span><span class="pun">&lt;</span><span class="kwd">class</span><span class="pln"> T</span><span class="pun">&gt;</span><span class="pln">
</span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;::</span><span class="pln">push </span><span class="pun">(</span><span class="pln">T </span><span class="kwd">const</span><span class="pun">&amp;</span><span class="pln"> elem</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   </span><span class="com">// append copy of passed element </span><span class="pln">
   elems</span><span class="pun">.</span><span class="pln">push_back</span><span class="pun">(</span><span class="pln">elem</span><span class="pun">);</span><span class="pln">    
</span><span class="pun">}</span><span class="pln"> 

</span><span class="kwd">template</span><span class="pln"> </span><span class="pun">&lt;</span><span class="kwd">class</span><span class="pln"> T</span><span class="pun">&gt;</span><span class="pln">
</span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;::</span><span class="pln">pop </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">elems</span><span class="pun">.</span><span class="pln">empty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="kwd">throw</span><span class="pln"> out_of_range</span><span class="pun">(</span><span class="str">"Stack&lt;&gt;::pop(): empty stack"</span><span class="pun">);</span><span class="pln"> 
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="com">// remove last element </span><span class="pln">
   elems</span><span class="pun">.</span><span class="pln">pop_back</span><span class="pun">();</span><span class="pln">         
</span><span class="pun">}</span><span class="pln"> 

</span><span class="kwd">template</span><span class="pln"> </span><span class="pun">&lt;</span><span class="kwd">class</span><span class="pln"> T</span><span class="pun">&gt;</span><span class="pln">
T </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;::</span><span class="pln">top </span><span class="pun">()</span><span class="pln"> </span><span class="kwd">const</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">elems</span><span class="pun">.</span><span class="pln">empty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      </span><span class="kwd">throw</span><span class="pln"> out_of_range</span><span class="pun">(</span><span class="str">"Stack&lt;&gt;::top(): empty stack"</span><span class="pun">);</span><span class="pln"> 
   </span><span class="pun">}</span><span class="pln">
   
   </span><span class="com">// return copy of last element </span><span class="pln">
   </span><span class="kwd">return</span><span class="pln"> elems</span><span class="pun">.</span><span class="pln">back</span><span class="pun">();</span><span class="pln">      
</span><span class="pun">}</span><span class="pln"> 

</span><span class="kwd">int</span><span class="pln"> main</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
   </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="typ">Stack</span><span class="str">&lt;int&gt;</span><span class="pln">         intStack</span><span class="pun">;</span><span class="pln">  </span><span class="com">// stack of ints </span><span class="pln">
      </span><span class="typ">Stack</span><span class="str">&lt;string&gt;</span><span class="pln"> stringStack</span><span class="pun">;</span><span class="pln">    </span><span class="com">// stack of strings </span><span class="pln">

      </span><span class="com">// manipulate int stack </span><span class="pln">
      intStack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="lit">7</span><span class="pun">);</span><span class="pln"> 
      cout </span><span class="pun">&lt;&lt;</span><span class="pln"> intStack</span><span class="pun">.</span><span class="pln">top</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln">endl</span><span class="pun">;</span><span class="pln"> 

      </span><span class="com">// manipulate string stack </span><span class="pln">
      stringStack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="str">"hello"</span><span class="pun">);</span><span class="pln"> 
      cout </span><span class="pun">&lt;&lt;</span><span class="pln"> stringStack</span><span class="pun">.</span><span class="pln">top</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> std</span><span class="pun">::</span><span class="pln">endl</span><span class="pun">;</span><span class="pln"> 
      stringStack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span><span class="pln"> 
      stringStack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span><span class="pln"> 
   </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="pln">exception </span><span class="kwd">const</span><span class="pun">&amp;</span><span class="pln"> ex</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> 
      cerr </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="str">"Exception: "</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> ex</span><span class="pun">.</span><span class="pln">what</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln">endl</span><span class="pun">;</span><span class="pln"> 
      </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">;</span><span class="pln">
   </span><span class="pun">}</span><span class="pln"> 
</span><span class="pun">}</span><span class="pln"> </span></pre>
<p>If we compile and run above code, this would produce the following result −</p>
<pre class="result notranslate">7
hello
Exception: Stack&lt;&gt;::pop(): empty stack
</pre>
<hr>
<div class="pre-btn">
<a href="https://www.tutorialspoint.com/cplusplus/cpp_namespaces.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="print-btn center">
<a href="https://www.tutorialspoint.com/cgi-bin/printpage.cgi" target="_blank"><i class="icon icon-print big-font"></i> Print</a>
</div>
<div class="nxt-btn">
<a href="https://www.tutorialspoint.com/cplusplus/cpp_preprocessor.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<hr>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div class="bottomadtag">Advertisements</div>
<!-- /60931893/tutorial_bottom_leader_board -->
<div id="div-gpt-ad-1510138782906-3" data-google-query-id="CKX_2bqA6dcCFQpnjgodeZMJQw">
<script>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-3'); });
</script>
<div id="google_ads_iframe_/60931893/tutorial_bottom_leader_board_0__container__" style="border: 0pt none; display: inline-block; width: 336px; height: 280px;"><iframe style="border: 0px none; vertical-align: bottom;" src="C++%20Templates_files/container_004.htm" id="google_ads_iframe_/60931893/tutorial_bottom_leader_board_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" data-is-safeframe="true" width="336" height="280" frameborder="0"></iframe></div></div>
</div>
</div>
</div>
<div class="row">
<div class="col-md-3" id="rightbar">
<div class="simple-ad">
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'http://www.tutorialspoint.com/cplusplus/cpp_templates.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="C++%20Templates_files/facebookIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'http://www.tutorialspoint.com/cplusplus/cpp_templates.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="C++%20Templates_files/twitterIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'http://www.tutorialspoint.com/cplusplus/cpp_templates.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="C++%20Templates_files/linkedinIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=http://www.tutorialspoint.com/cplusplus/cpp_templates.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="C++%20Templates_files/googlePlusIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=http://www.tutorialspoint.com/cplusplus/cpp_templates.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="C++%20Templates_files/StumbleUponIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=http://www.tutorialspoint.com/cplusplus/cpp_templates.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;">
<img src="C++%20Templates_files/reddit.jpg" alt="img">
</a>
</div>
<div class="rightgooglead">
<!-- /60931893/tutorial_right_top -->
<div id="div-gpt-ad-1510138782906-2" style="height: 250px; width: 300px;" data-google-query-id="CPn82bqA6dcCFQPrjgodnpsN_w">
<script>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-2'); });
</script>
<div id="google_ads_iframe_/60931893/tutorial_right_top_0__container__" style="border: 0pt none; display: inline-block; width: 300px; height: 250px;"><iframe style="border: 0px none; vertical-align: bottom;" src="C++%20Templates_files/container_004.htm" id="google_ads_iframe_/60931893/tutorial_right_top_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" data-is-safeframe="true" width="300" height="250" frameborder="0"></iframe></div></div>
</div>
<div class="rightgooglead">
<!-- /60931893/tutorial_right_middle -->
<div id="div-gpt-ad-1510138782906-1" data-google-query-id="CN6G2rqA6dcCFU5mjgodZRcNQw">
<script>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-1'); });
</script>
<div id="google_ads_iframe_/60931893/tutorial_right_middle_0__container__" style="border: 0pt none; display: inline-block; width: 300px; height: 600px;"><iframe style="border: 0px none; vertical-align: bottom;" src="C++%20Templates_files/container_004.htm" id="google_ads_iframe_/60931893/tutorial_right_middle_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" data-is-safeframe="true" width="300" height="600" frameborder="0"></iframe></div></div>
</div>
<div class="rightgooglead">
<!-- /60931893/tutorial_right_bottom -->
<div id="div-gpt-ad-1510138782906-0" data-google-query-id="COrr2bqA6dcCFUkvjgod4JYF9A">
<script>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-0'); });
</script>
<div id="google_ads_iframe_/60931893/tutorial_right_bottom_0__container__" style="border: 0pt none; display: inline-block; width: 300px; height: 600px;"><iframe style="border: 0px none; vertical-align: bottom;" src="C++%20Templates_files/container_004.htm" id="google_ads_iframe_/60931893/tutorial_right_bottom_0" title="3rd party ad content" name="" scrolling="no" marginwidth="0" marginheight="0" data-is-safeframe="true" width="300" height="600" frameborder="0"></iframe></div></div>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="footer-copyright">
<div class="container">
<div class="row">
<div class="col-md-1">
<a href="https://www.tutorialspoint.com/index.htm" class="logo"> <img alt="Tutorials Point" class="img-responsive" src="C++%20Templates_files/logo-footer.png"> </a>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <nav id="sub-menu">
      <ul>
         <li><a href="https://www.tutorialspoint.com/about/tutorials_writing.htm">Write for us</a></li>
         <li><a href="https://www.tutorialspoint.com/about/faq.htm">FAQ's</a></li>
         <li><a href="https://www.tutorialspoint.com/about/about_helping.htm">Helping</a></li>
         <li><a href="https://www.tutorialspoint.com/about/contact_us.htm">Contact</a></li>
      </ul>
   </nav>
</div>
<div class="col-md-3 col-sm-12 col-xs-12">
<p>© Copyright 2017. All Rights Reserved.</p>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <div class="news-group">
      <input class="form-control-foot search" name="textemail" id="textemail" autocomplete="off" placeholder="Enter email for newsletter" onfocus="if (this.value == 'Enter email for newsletter...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Enter email for newsletter...';}" type="text">
      <span class="input-group-btn"> <button class="btn btn-default btn-footer" id="btnemail" type="submit" onclick="javascript:void(0);">go</button> </span>
      <div id="newsresponse"></div>
   </div>
</div>
</div>
</div>
</div>
</div>
<!-- Libs -->
<script type="text/javascript" src="C++%20Templates_files/custom-min.js"></script><a class="scroll-to-top" href="#" id="scrollToTop"><i class="icon icon-chevron-up icon-white"></i></a>
<script src="C++%20Templates_files/urchin.js">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
$('.pg-icon').click(function(){
   $('.wrapLoader').show();
});
</script>
<script type="text/javascript" src="C++%20Templates_files/jquery.js"></script>
<script type="text/javascript">
   var tryit = new $.TryIt('/cplusplus/try_cplusplus.php');
   tryit.compile();
</script><div id="source" style="display:none;"></div><div id="supportsource" style="display:none;"></div><div id="utilsource" style="display:none;"></div><div id="extrasource" style="display:none;"></div><div id="inputs" style="display:none;"></div><div id="filename" style="display:none;"></div>
<script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "headline": "C++ Templates",
    "name": "C++ Templates",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://www.tutorialspoint.com/cplusplus/cpp_templates.htm"
    },
    "image": {
        "@type": "ImageObject",
        "url": "https://www.tutorialspoint.com/cplusplus/images/cpp-mini-logo.jpg",
        "width": 255,
        "height": 194
    },
    "author": {
        "@type": "Organization",
        "name": "Tutorials Point",
        "url": "https://www.tutorialspoint.com",
        "logo": {
            "@type": "ImageObject",
            "url": "https://www.tutorialspoint.com/images/logo60.png",
            "width": 210,
            "height": 60
        }
    },
    "datePublished": "August 16 2017 09:37:23.",
    "dateModified": "August 09 2017 02:59:24.",
    "publisher": {
        "@type": "Organization",
        "name": "Tutorials Point",
        "url": "https://www.tutorialspoint.com",
        "logo": {
            "@type": "ImageObject",
            "url": "https://www.tutorialspoint.com/images/logo60.png",
            "width": 210,
            "height": 60
        }
    },
    "description": "Templates are the foundation of generic programming, which involves writing code in a way that is independent of any particular type...."
}
</script>
<script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    "itemListElement": [
        {
            "@type": "ListItem",
            "position": 1,
            "item": {
                "name": "www.tutorialspoint.com",
                "@id": "https://www.tutorialspoint.com"
            }
        },
        {
            "@type": "ListItem",
            "position": 2,
            "item": {
                "name": "Cplusplus",
                "@id": "https://www.tutorialspoint.com/cplusplus"
            }
        },
        {
            "@type": "ListItem",
            "position": 3,
            "item": {
                "name": "C++ Templates"
            }
        }
    ]
}
</script>



<div class="autocomplete-suggestions "></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" role="dialog" tabindex="-1" style="display: none;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><button type="button" id="cboxPrevious"></button><button type="button" id="cboxNext"></button><button id="cboxSlideshow"></button><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none; max-width: none;"></div></div></body></html>